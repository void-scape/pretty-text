name: CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  typos:
    name: typos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: typos
        run: cargo install typos-cli && typos

  # Run cargo test
  test:
    name: Test (${{ matrix.crate }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        crate:
          - pretty_text_parser
          - pretty_text_macros
          - bevy_pretty_text
          # - demo
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ matrix.crate }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-test-${{ matrix.crate }}-
            ${{ runner.os }}-cargo-test-
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev
      - name: Run cargo test for ${{ matrix.crate }}
        run: cargo test -p ${{ matrix.crate }} --all-features

  # Run cargo clippy
  clippy:
    name: Clippy (${{ matrix.crate }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        crate:
          - pretty_text_parser
          - pretty_text_macros
          - bevy_pretty_text
          # - demo
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ matrix.crate }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-clippy-${{ matrix.crate }}-
            ${{ runner.os }}-cargo-clippy-
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev
      - name: Run cargo clippy for ${{ matrix.crate }}
        run: cargo clippy --all-features -- -D warnings

  # Run cargo fmt --all -- --check
  format:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  # Build examples
  examples:
    name: Examples
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.toml') }}
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev
      - name: Run cargo build
        run: cd examples && cargo build --bins
